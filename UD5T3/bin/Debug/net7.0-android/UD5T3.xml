<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UD5T3</name>
    </assembly>
    <members>
        <member name="T:UD5T3.App">
            <summary>
            Clase sobre la que se pintan la vista (actividad principal).
            
            Almacena una instancia del repositorio de alumnos y asigna la página principal
            a la vista NAVEGABLE  AlumnoView
            </summary>
        </member>
        <member name="T:UD5T3.MVVM.Models.Alumno">
            <summary>
            Tabla de Alumnos.
            Almacena la estructura de la base de datos de AlumnoRepositorio.
            </summary>
        </member>
        <member name="M:UD5T3.MVVM.ViewModels.AlumnoViewModel.#ctor">
            <summary>
            Almacena dinámicamente la lista de alumnos y el alumno actual seleccionado.
            
            CrearOActualizar:
                Se comunica con el repositorio para crear o actualizar un alumno pasándoselo por parámetro.
                Muestra un mensaje del estado de la operación y resetea el valor de AlumnoActual.
                Refresca la vista.
                Controla nulos y de que el NIF sea menor a 9 caracteres.
            
            Borrar:
                Se comunica con el repositorio para borrar un alumno a través de su ID.
                Muestra un mensaje del estado de la operación y resetea el valor de AlumnoActual.
                Refresca la vista.
                
            Detalle:
                Se comunica con el repositorio para obtener un alumno de la base de datos a través
                de su ID.
                Asigna el valor resultante de la operación en la variable AlumnoActual.
                Refresca la vista.
            </summary>
        </member>
        <member name="M:UD5T3.MVVM.ViewModels.AlumnoViewModel.Mensaje(System.String,System.String)">
            <summary>
            Muestra una alerta por pantalla.
            </summary>
            <param name="title">Título de la alerta.</param>
            <param name="message">Mensaje de la alerta.</param>
        </member>
        <member name="M:UD5T3.MVVM.ViewModels.AlumnoViewModel.Refresh">
            <summary>
            Refresca la vista haciendo un getAll al repositorio.
            </summary>
        </member>
        <member name="T:UD5T3.MVVM.ViewModels.DetalleViewModel">
            <summary>
            Guarda la estructura de datos de la vista de detalles.
            </summary>
        </member>
        <member name="T:UD5T3.MVVM.Views.AlumnoView">
            <summary>
            Página principal del proyecto.
            Muestra un formulario para operaciones CRUD con alumnos 
            y hace la navegación a la vista detalle.
            </summary>
        </member>
        <member name="M:UD5T3.MVVM.Views.AlumnoView.#ctor">
            <summary>
            Inicializa la VistaAlumnoView.
            Asigna el contexto a AlumnoViewModel.
            </summary>
        </member>
        <member name="M:UD5T3.MVVM.Views.AlumnoView.Detalle_Clicked(System.Object,System.EventArgs)">
            <summary>
            Recibe un evento Click de un Botón y el id del alumno seleccionado 
            por parámetro.
            Guarda el alumno seleccionado en una variable privada (alumnoActual) de la función.
            
            Hace la navegación a vista de detalle y asigna el contexto al DetalleViewModel.
            Los datos del DetalleViewModel se sacan de alumnoActual para transpasar datos de una vista
            a otra.
            
            </summary>
            <param name="sender"> Quien realiza el evento( el propio botón ). </param>
            <param name="e"> Argumetos que recibe el evento. </param>
        </member>
        <member name="T:UD5T3.MVVM.Views.DetalleView">
            <summary>
            Pantalla secundaria del proyecto cuya función es mostrar los detalles 
            de un alumno en particular
            </summary>
        </member>
        <member name="M:UD5T3.MVVM.Views.DetalleView.#ctor">
            <summary>
            Incializa la vista
            </summary>
        </member>
        <member name="T:UD5T3.Repositories.AlumnoRepository">
            <summary>
            Repositorio de alumnos.
            
            Aqui se ejecutan las órdenes CRUD de la aplicación
            </summary>
        </member>
        <member name="M:UD5T3.Repositories.AlumnoRepository.AddOrUpdateStudent(UD5T3.MVVM.Models.Alumno)">
            <summary>
            Añade o actualiza ( en resumen, superpone ) a un alumno en la base
            de datos .
            Comprueba si existe el alumno a través de su id. Lanza un mensaje
            del estado de la operación en función si se realizó correctamente la operación,
            y muestra cuántas filas fueron actualizadas o insertadas.
            
            Guarda el resultado de la operación en la variable resultado
            
            No devuelve nada.
            </summary>
            <param name="alumno">Alumno que se va a añadir/editar.</param>
        </member>
        <member name="M:UD5T3.Repositories.AlumnoRepository.GetAll">
            <summary>
            Obtiene todos los alumnos almacenados en la base de datos.
            
            Muestra un mensaje de error en caso de de que falle la operación.
            
            El resultado lo almacena en la variable lista.
            
            Devuelve la lista de alumnos obtenida.
            </summary>
            <returns>Una lista de tipo Alumno.</returns>
        </member>
        <member name="M:UD5T3.Repositories.AlumnoRepository.Get(System.Int32)">
            <summary>
            Obtiene un alumno de la base de datos a partir de su id.
            
            Si surge algún error en la petición muestra un mensaje con el error correspondiente.
            
            Guarda el resultado en una variable (alumno) privada de la función.
            
            Devuelve el alumno obtenido.
            </summary>
            <param name="id">Id del alumno a obtener.</param>
            <returns>Un alumno de tipo Alumno.</returns>
        </member>
        <member name="M:UD5T3.Repositories.AlumnoRepository.Delete(System.Int32)">
            <summary>
            Borra un alumno de la base de datos a través de su ID.
            
            Muestra un mensaje con el resultado de la operación.
            Si surge algún error en la petición muestra un mensaje con el error correspondiente.
            
            Guarda el resultado de la operación en una variable (resultado) privada de la función.
            
            No devuelve nada.
            </summary>
            <param name="id">ID del usuario a borrar.</param>
        </member>
    </members>
</doc>
